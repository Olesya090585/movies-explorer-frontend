{"ast":null,"code":"export class Api {\n  constructor(data) {\n    this._baseUrl = data.baseUrl;\n    this._headers = data.headers;\n  }\n  _checkRequest(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  async register(email, password) {\n    const res = await fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return this._checkRequest(res);\n  }\n  async login(email, password) {\n    const res = await fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    return this._checkRequest(res);\n  }\n  async getContent(token) {\n    const res = await fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return this._checkRequest(res);\n  }\n  async getUserData(token) {\n    const res = await fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return this._checkRequest(res);\n  }\n  async editUserInfo(data, token) {\n    const res = await fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: data.name,\n        email: data.email\n      })\n    });\n    return this._checkRequest(res);\n  }\n  async getInitialMovies(token) {\n    const res = await fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return this._checkRequest(res);\n  }\n  async deleteMovie(movieId, token) {\n    const res = await fetch(`${this._baseUrl}//movies/${movieId}`, {\n      method: \"DELETE\",\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return this._checkRequest(res);\n  }\n  async addSaveMovie(movies) {\n    const res = await fetch(`${this._baseUrl}/movies`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(movies)\n    });\n    return this._checkRequest(res);\n  }\n}\nconst api = new Api({\n  // baseUrl: \"https://api.movies.ovarnakova.nomoredomainsicu.ru\",\n  baseUrl: 'http://localhost:3000',\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","data","_baseUrl","baseUrl","_headers","headers","_checkRequest","res","ok","json","Promise","reject","status","register","email","password","fetch","method","body","JSON","stringify","login","getContent","token","Authorization","getUserData","editUserInfo","name","getInitialMovies","deleteMovie","movieId","addSaveMovie","movies","localStorage","getItem","api"],"sources":["/Users/o.varnakova/dev/diplom/movies-explorer-frontend/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["export class Api {\n    constructor(data) {\n      this._baseUrl = data.baseUrl;\n      this._headers = data.headers;\n    }\n  \n    _checkRequest(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  \n    async register(email, password){\n        const res = await fetch(`${this._baseUrl}/signup`, {\n          method: \"POST\",\n          body: JSON.stringify({ email, password }),\n          headers: {\n            ...this._headers,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        return this._checkRequest(res);\n      };\n      \n      async login(email, password){\n        const res = await fetch(`${this._baseUrl}/signin`, {\n          method: \"POST\",\n          headers: {\n            ...this._headers,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email: email, password: password }),\n        });\n        return this._checkRequest(res);\n      }\n      \n      async getContent(token){\n        const res = await fetch(`${this._baseUrl}/users/me`, {\n          method: \"GET\",\n          headers: {\n            ...this._headers,\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          }\n        });\n        return this._checkRequest(res);\n      };\n\n    async getUserData(token) {\n      const res = await fetch(`${this._baseUrl}/users/me`, {\n        headers: {\n          ...this._headers, \n          Authorization: `Bearer ${token}`\n        }\n      });\n      return this._checkRequest(res);\n    }\n  \n    async editUserInfo(data, token) {\n      const res = await fetch(`${this._baseUrl}/users/me`, {\n        method: \"PATCH\",\n        headers: {\n          ...this._headers, \n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: data.name,\n          email: data.email,\n        }),\n      });\n      return this._checkRequest(res);\n    }\n  \n    async getInitialMovies(token) {\n      const res = await fetch(`${this._baseUrl}/cards`, {\n        headers: {\n          ...this._headers, \n          Authorization: `Bearer ${token}`,\n        }\n      });\n      return this._checkRequest(res);\n    }\n  \n    async deleteMovie(movieId, token) {\n      const res = await fetch(`${this._baseUrl}//movies/${movieId}`, {\n        method: \"DELETE\",\n        headers: {\n          ...this._headers, \n          Authorization: `Bearer ${token}`,\n        },\n      });\n      return this._checkRequest(res);\n    }\n    async addSaveMovie(movies) {\n        const res = await fetch(`${this._baseUrl}/movies`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(movies),\n        });\n        return this._checkRequest(res);\n      };\n  }\n\n  const api = new Api({\n    // baseUrl: \"https://api.movies.ovarnakova.nomoredomainsicu.ru\",\n    baseUrl: 'http://localhost:3000',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}